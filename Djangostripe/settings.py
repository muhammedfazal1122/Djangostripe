"""
Django settings for Djangostripe project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-**uols(-4qtcf#r&#93mz%3f%8fe&huf-0bhptwg43bl72o4s6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


import os
from dotenv import load_dotenv
load_dotenv()

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',

    'rest_framework',
    'task',
    'payments',  
    'djstripe',  
    'nuropayment',  
    'task_metering',  
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]   
    

CORS_ALLOW_ALL_ORIGINS = True  # Or set allowed origins
from rest_framework.throttling import SimpleRateThrottle
from django.core.cache import cache
from datetime import date
from datetime import timedelta

REST_FRAMEWORK = {
    # Authentication
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    # Permissions
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],

    # Throttling
    'DEFAULT_THROTTLE_CLASSES': [
        'task_metering.throttling.SubscriptionBasedThrottle',  # your custom class
    ],
    'DEFAULT_THROTTLE_RATES': {
        'user': '100/day',  # only used by UserRateThrottle
    },

    # Versioning (optional but useful)
    # 'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.NamespaceVersioning',
}

# Caching: This is necessary for throttling to work
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
}

# JWT Settings
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "AUTH_HEADER_TYPES": ("Bearer",),
    "AUTH_COOKIE_NAME": "access_token",
    "AUTH_COOKIE_HTTPONLY": True,
}


# Optional: Remove RATELIMIT_ settings unless using `django-ratelimit` package
# If you are not using

ROOT_URLCONF = 'Djangostripe.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Djangostripe.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# STRIPE_PUBLIC_KEY = os.getenv('STRIPE_PUBLIC_KEY')
# STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY')

STRIPE_TEST_PUBLIC_KEY = "pk_test_51R6qCKCvbNLHEvrSTXy4zyJMjSCrugObVpNz5ognpCz3PuvY9Au3bEc1iFFk5jytRybWvRP2lpuBBOulOkl3JLTH00exB5T6Ov"
STRIPE_TEST_SECRET_KEY = "sk_test_51R6qCKCvbNLHEvrSTKpCzcSOUyHCZv8tiOHCxAoLEPqZcpgm2re8MQZ7lkza4sHfB5JYu0jTJylpqAvqLfTOWJPn00EfMlyxNb"
STRIPE_LIVE_MODE = False
# Needed for webhooks, which are discussed later in the guide.
STRIPE_WEBHOOK_SECRET = "whsec_efb1497ae6820b61aac66147feee8fff930a40090e0176c40a7945d6ad80e92b"
DJSTRIPE_FOREIGN_KEY_TO_FIELD = "id"
STRIPE_PRICING_TABLE_ID = 'prctbl_1RBvkBCvbNLHEvrSJcskd0uf'


# Choose which approach to use (True = Hard limits, False = Usage-based billing)
USE_HARD_API_LIMITS = True  # Set to False for usage-based pricing
FREE_TIER_API_LIMIT = 5  # Number of API calls allowed for users without subscriptions